///////////////////////////////////////////////////////////
//  ChampionInfo.cs
//  Implementation of the Class ChampionInfo
//  Generated by Enterprise Architect
//  Created on:      04-Apr-2015 2:25:32 PM
//  Original author: Marko
///////////////////////////////////////////////////////////




using System.Drawing;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System;
using LoL_URF_HybridStats_vs12.ViewModels;
using LoL_URF_HybridStats_vs12.Helper;

[Serializable]
public class ChampionInfo : ViewModelBase, ISerializable
{
    #region Attributes

    private long _id;
    private string _name;
    private string _title;

    private string _imgCardLocation;
    private string _imgSplashLocation;
    private string _imgSquareLocation;

    private int _noOfPlayedGames;
    private long _noOfKills;
    private long _noOfDeaths;
    private long _noOfAssists;
    private long _noOfSoloKills;

    //new added -   need to calculate them
    private int _noOfWins;
    private int _noOfLosses;
    private long _noOfMinions;
    private long _goldEarned;
    private long _damageDealt;
    private long _damageTaken;

    private HeatMap _dangerZonesHeatmap;
    private HeatMap _goodZonesHeatmap;

    private ObservableDictionary<long, HeatMap> _collectionHeatmapDiedByChampions;
    private ObservableDictionary<long, HeatMap> _collectionHeatmapKilledChampions;
    private ObservableDictionary<long, long> _allyDict;      //best teammate(biggest number of assist)
    private ObservableDictionary<long, long> _allyAppearanceDict;
    private ObservableDictionary<long, long> _enemyAppearanceDict;

    //NEW 
    private List<List<long>> _pentakillItems;
    private int _mvpCount;
    private long _bannedCount;
    private int _noOfLvl30;



    #endregion

    #region Fields

    public int NoOfLvl30
    {
        get { return _noOfLvl30; }
        set
        {
            _noOfLvl30 = value;
            this.OnPropertyChanged("NoOfLvl30");
        }
    }

    public int MvpCount
    {
        get { return _mvpCount; }
        set
        {
            _mvpCount = value;
            this.OnPropertyChanged("MvpCount");
        }
    }

    public long BannedCount
    {
        get { return _bannedCount; }
        set
        {
            _bannedCount = value;
            this.OnPropertyChanged("BannedCount");
        }
    }

    public long Id
    {
        get {   return _id; }
        set
        {
            _id = value;
            this.OnPropertyChanged("Id");
        }
    }

    public string Name
    {
        get { return _name; }
        set
        {
            _name = value;
            this.OnPropertyChanged("Name");
        }
    }

    public string Title
    {
        get { return _title; }
        set
        {
            _title = value;
            this.OnPropertyChanged("Title");
        }
    }

    public string ImgCardLocation
    {
        get { return _imgCardLocation; }
        set
        {
            _imgCardLocation = value;
            this.OnPropertyChanged("ImgCardLocation");
        }
    }

    public string ImgSplashLocation
    {
        get { return _imgSplashLocation; }
        set
        {
            _imgSplashLocation = value;
            this.OnPropertyChanged("ImgSplashLocation");
        }
    }

    public string ImgSquareLocation
    {
        get { return _imgSquareLocation; }
        set
        {
            _imgSquareLocation = value;
            this.OnPropertyChanged("ImgSquareLocation");
        }
    }

    public int NoOfPlayedGames
    {
        get { return _noOfPlayedGames; }
        set
        {
            _noOfPlayedGames = value;
            this.OnPropertyChanged("NoOfPlayedGames");
        }
    }

    public long NoOfKills
    {
        get { return _noOfKills; }
        set
        {
            _noOfKills = value;
            this.OnPropertyChanged("NoOfKills");
        }
    }

    public long NoOfDeaths
    {
        get { return _noOfDeaths; }
        set
        {
            _noOfDeaths = value;
            this.OnPropertyChanged("NoOfDeaths");
        }
    }

    public long NoOfAssists
    {
        get { return _noOfAssists; }
        set
        {
            _noOfAssists = value;
            this.OnPropertyChanged("NoOfAssists");
        }
    }

    public long NoOfSoloKills
    {
        get { return _noOfSoloKills; }
        set
        {
            _noOfSoloKills = value;
            this.OnPropertyChanged("NoOfSoloKills");
        }
    }

    public int NoOfWins
    {
        get { return _noOfWins; }
        set
        {
            _noOfWins = value;
            this.OnPropertyChanged("NoOfWins");
        }
    }

    public int NoOfLosses
    {
        get { return _noOfLosses; }
        set
        {
            _noOfLosses = value;
            this.OnPropertyChanged("NoOfLosses");
        }
    }

    public long NoOfMinions
    {
        get { return _noOfMinions; }
        set
        {
            _noOfMinions = value;
            this.OnPropertyChanged("NoOfMinions");
        }
    }

    public long GoldEarned
    {
        get { return _goldEarned; }
        set
        {
            _goldEarned = value;
            this.OnPropertyChanged("GoldEarned");
        }
    }

    public long DamageDealt
    {
        get { return _damageDealt; }
        set
        {
            _damageDealt = value;
            this.OnPropertyChanged("DamageDealt");
        }
    }

    public long DamageTaken
    {
        get { return _damageTaken; }
        set
        {
            _damageTaken = value;
            this.OnPropertyChanged("DamageTaken");
        }
    }

    public HeatMap DangerZonesHeatmap
    {
        get { return _dangerZonesHeatmap; }
        set
        {
            _dangerZonesHeatmap = value;
            this.OnPropertyChanged("DangerZonesHeatmap");
        }
    }

    public HeatMap GoodZonesHeatmap
    {
        get { return _goodZonesHeatmap; }
        set
        {
            _goodZonesHeatmap = value;
            this.OnPropertyChanged("GoodZonesHeatmap");
        }
    }

    public ObservableDictionary<long, HeatMap> CollectionHeatmapDiedByChampions
    {
        get { return _collectionHeatmapDiedByChampions; }
        set
        {
            _collectionHeatmapDiedByChampions = value;
            this.OnPropertyChanged("CollectionHeatmapDiedByChampions");
        }
    }

    public ObservableDictionary<long, HeatMap> CollectionHeatmapKilledChampions
    {
        get { return _collectionHeatmapKilledChampions; }
        set
        {
            _collectionHeatmapKilledChampions = value;
            this.OnPropertyChanged("CollectionHeatmapKilledChampions");
        }
    }

    public ObservableDictionary<long, long> AllyDict
    {
        get { return _allyDict; }
        set
        {
            _allyDict = value;
            this.OnPropertyChanged("AllyDict");
        }
    }

    public ObservableDictionary<long, long> AllyAppearanceDict
    {
        get { return _allyAppearanceDict; }
        set
        {
            _allyAppearanceDict = value;
            this.OnPropertyChanged("AllyAppearanceDict");
        }
    }

    public ObservableDictionary<long, long> EnemyAppearanceDict
    {
        get { return _enemyAppearanceDict; }
        set
        {
            _enemyAppearanceDict = value;
            this.OnPropertyChanged("EnemyAppearanceDict");
        }
    }

    public List<List<long>> PentakillItems
    {
        get { return _pentakillItems; }
        set
        {
            _pentakillItems = value;
            this.OnPropertyChanged("PentakillItems");
        }
    }
    #endregion

    public ChampionInfo()
    {
        _collectionHeatmapDiedByChampions = new ObservableDictionary<long, HeatMap>();
        _collectionHeatmapKilledChampions = new ObservableDictionary<long, HeatMap>();
        _allyDict = new ObservableDictionary<long, long>();
        _dangerZonesHeatmap = new HeatMap();
        _goodZonesHeatmap = new HeatMap();
        _allyAppearanceDict = new ObservableDictionary<long, long>();
        _enemyAppearanceDict = new ObservableDictionary<long, long>();
        _pentakillItems = new List<List<long>>();
	}

    public ChampionInfo(long id, string name, string title)
    {
        this._id = id;
        this._name = name;
        this._title = title;

        _collectionHeatmapDiedByChampions = new ObservableDictionary<long, HeatMap>();
        _collectionHeatmapKilledChampions = new ObservableDictionary<long, HeatMap>();
        _allyDict = new ObservableDictionary<long, long>();
        _dangerZonesHeatmap = new HeatMap();
        _goodZonesHeatmap = new HeatMap();
        _allyAppearanceDict = new ObservableDictionary<long, long>();
        _enemyAppearanceDict = new ObservableDictionary<long, long>();
        _pentakillItems = new List<List<long>>();
        SetImagesLocations();
    }

    public void SetImagesLocations()
    {
        string imagesFolderLocation = "Images\\champions_images";
        if (_name.Contains(" "))
            _name = _name.Replace(" ", "");
        if (_name.Contains("'"))
            _name = _name.Replace("'", "");
        if (_name.Contains("."))
            _name = _name.Replace(".", "");

        _imgCardLocation = string.Format("{0}\\{1}_0.jpg", imagesFolderLocation, _name);
        _imgSplashLocation = string.Format("{0}\\{1}_Splash_0.jpg", imagesFolderLocation, _name);
        _imgSquareLocation = string.Format("{0}\\{1}_Square_0.png", imagesFolderLocation, _name);
    }


    public void GetObjectData(SerializationInfo info, StreamingContext ctxt)
    {
        info.AddValue("id", this._id);
        info.AddValue("name", this._name);
        info.AddValue("title", this._title);
        info.AddValue("imgCardLocation", this._imgCardLocation);
        info.AddValue("imgSplashLocation", this._imgSplashLocation);
        info.AddValue("imgSquareLocation", this._imgSquareLocation);
        info.AddValue("noOfPlayedGames", this._noOfPlayedGames);
        info.AddValue("noOfKills", this._noOfKills);
        info.AddValue("noOfDeaths", this._noOfDeaths);
        info.AddValue("noOfAssists", this._noOfAssists);
        info.AddValue("noOfSoloKills", this._noOfSoloKills);
        info.AddValue("dangerZonesHeatmap", this._dangerZonesHeatmap);
        info.AddValue("goodZonesHeatmap", this._goodZonesHeatmap);
        info.AddValue("collectionHeatmapDiedByChampions", this._collectionHeatmapDiedByChampions);
        info.AddValue("collectionHeatmapKilledChampions", this._collectionHeatmapKilledChampions);
        info.AddValue("allyDict", this._allyDict);
        info.AddValue("allyAppearanceDict", this._allyAppearanceDict);
        info.AddValue("enemyAppearanceDict", this._enemyAppearanceDict);
        info.AddValue("_noOfWins", this._noOfWins);
        info.AddValue("_noOfLosses", this._noOfLosses);
        info.AddValue("_noOfMinions", this._noOfMinions);
        info.AddValue("_goldEarned", this._goldEarned);
        info.AddValue("_damageDealt", this._damageDealt);
        info.AddValue("_damageTaken", this._damageTaken);
        info.AddValue("_pentakillItems", this._pentakillItems);
        info.AddValue("_mvpCount", this._mvpCount);
        info.AddValue("_bannedCount", this._bannedCount);
        info.AddValue("_noOfLvl30", this._noOfLvl30);
    }


    protected ChampionInfo(SerializationInfo info, StreamingContext context)
    {
        if (info == null)
            throw new System.ArgumentNullException("info");
        _id = (int)info.GetValue("id", typeof(int));
        _name = (string)info.GetValue("name", typeof(string));
        _title = (string)info.GetValue("title", typeof(string));
        _imgCardLocation = (string)info.GetValue("imgCardLocation", typeof(string));
        _imgSplashLocation = (string)info.GetValue("imgSplashLocation", typeof(string));
        _imgSquareLocation = (string)info.GetValue("imgSquareLocation", typeof(string));
        _noOfPlayedGames = (int)info.GetValue("noOfPlayedGames", typeof(int));
        _noOfKills = (long)info.GetValue("noOfKills", typeof(long));
        _noOfDeaths = (long)info.GetValue("noOfDeaths", typeof(long));
        _noOfAssists = (long)info.GetValue("noOfAssists", typeof(long));
        _noOfSoloKills = (long)info.GetValue("noOfSoloKills", typeof(long));
        _dangerZonesHeatmap = (HeatMap)info.GetValue("dangerZonesHeatmap", typeof(HeatMap));
        _goodZonesHeatmap = (HeatMap)info.GetValue("goodZonesHeatmap", typeof(HeatMap));
        _collectionHeatmapDiedByChampions = (ObservableDictionary<long, HeatMap>)info.GetValue("collectionHeatmapDiedByChampions", typeof(ObservableDictionary<long, HeatMap>));
        _collectionHeatmapKilledChampions = (ObservableDictionary<long, HeatMap>)info.GetValue("collectionHeatmapKilledChampions", typeof(ObservableDictionary<long, HeatMap>));
        _allyDict = (ObservableDictionary<long, long>)info.GetValue("allyDict", typeof(ObservableDictionary<long, long>));
        _allyAppearanceDict = (ObservableDictionary<long, long>)info.GetValue("allyAppearanceDict", typeof(ObservableDictionary<long, long>));
        _enemyAppearanceDict = (ObservableDictionary<long, long>)info.GetValue("enemyAppearanceDict", typeof(ObservableDictionary<long, long>));
        _noOfWins = (int)info.GetValue("_noOfWins", typeof(int));
        _noOfLosses = (int)info.GetValue("_noOfLosses", typeof(int));
        _noOfMinions = (long)info.GetValue("_noOfMinions", typeof(long));
        _goldEarned = (long)info.GetValue("_goldEarned", typeof(long));
        _damageDealt = (long)info.GetValue("_damageDealt", typeof(long));
        _damageTaken = (long)info.GetValue("_damageTaken", typeof(long));
        _pentakillItems = (List<List<long>>)info.GetValue("_pentakillItems", typeof(List<List<long>>));
        _mvpCount = (int)info.GetValue("_mvpCount", typeof(int));
        _bannedCount = (long)info.GetValue("_bannedCount", typeof(long));
        _noOfLvl30 = (int)info.GetValue("_noOfLvl30", typeof(int));
        
    }
}//end ChampionInfo